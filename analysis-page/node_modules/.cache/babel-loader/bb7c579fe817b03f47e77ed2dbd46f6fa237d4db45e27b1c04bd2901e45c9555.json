{"ast":null,"code":"var _jsxFileName = \"/Users/kokofan/Documents/project/CS522_analysis/src/barChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport useSVGCanvas from './useSVGCanvas.js';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PlotBarChart(props) {\n  _s();\n  // //this is a generic component for plotting a d3 plot\n  const d3Container = useRef(null);\n  const [svg, height, width, tTip] = useSVGCanvas(d3Container);\n  // console.log(svg, height, width, tTip);\n\n  const chartSelection = useMemo(() => {\n    if (svg === undefined | props.data === undefined) {\n      return;\n    }\n    var categories = ['Adult', 'Violence', 'Hate_Speech', 'Discrimination', 'Online_Predators'];\n    const padding = 40;\n\n    // console.log(props.data);\n\n    const subgroups = ['Agree', 'Disagree'];\n    const data = [];\n    for (var k in subgroups) {\n      for (var c in categories) {\n        var res = props.data.filter(function (d) {\n          return d.child_feedback == subgroups[k] && d.category == categories[c];\n        });\n\n        // console.log(res);\n\n        let entry = {\n          'feedback': subgroups[k],\n          'category': categories[c],\n          'count': res.length\n        };\n        data.push(entry);\n      }\n    }\n    const sumstat = d3.group(data, d => d.category);\n    console.log(Object.entries(sumstat));\n\n    // for (var d in data) {\n    //     console.log(d);\n    // }\n\n    // const groups = d3.group(data, d => d.category);\n\n    // for (var g in groups) {\n    //     console.log(g);\n    // }\n\n    var x = d3.scaleBand().domain(categories).range([0, width - padding * 3]);\n    svg.append(\"g\").attr(\"transform\", \"translate(\" + padding + ',' + (height - 1.5 * padding) + \") \").call(d3.axisBottom(x).ticks(categories.length)).selectAll(\"text\").attr(\"transform\", \"translate(-10,20)rotate(-45)\").style(\"text-anchor\", \"middle\").style(\"font-size\", 10);\n    var y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n      return +d.count;\n    })]).range([height - padding * 2.5, 0]);\n    svg.append(\"g\").attr(\"transform\", \"translate(\" + padding + ',' + 1 * padding + \")\").call(d3.axisLeft(y));\n    const xSubgroup = d3.scaleBand().domain(subgroups).range([0, x.bandwidth()]).padding([0.05]);\n    const color = d3.scaleOrdinal().domain(subgroups).range(['#e41a1c', '#377eb8']);\n\n    //   // Show the bars\n    // svg.append(\"g\")\n    //     .selectAll(\"g\")\n    //     // Enter in data = loop group per group\n    //     .data(data)\n    //     .join(\"g\")\n    //       .attr(\"transform\", d => `translate(${x(d.category)}, 0)`)\n    //     .selectAll(\"rect\")\n    //     .data(function(d) { \n    //         var temp = feedbacks.map(function(key) {\n    //             // console.log('key', key); \n    //             return {key: key, value: d[key]}; \n    //         })\n    //         // console.log(d);\n    //         return temp; \n    //     })\n    //     .join(\"rect\")\n    //       .attr(\"x\", d => xSubgroup(d.category))\n    //       .attr(\"y\", d => y(d.count))\n    //       .attr(\"width\", xSubgroup.bandwidth())\n    //       .attr(\"height\", d => height - y(d.count))\n    //       .attr(\"fill\", d => color(d.category));\n\n    // const dates =  props.data.map(d => d.date);\n    // const padding = 40;\n\n    // const counts = {};\n    // for (const d of dates) {\n    //   counts[d] = counts[d] ? counts[d] + 1 : 1;\n    // }\n\n    // const allDates = Object.keys(counts);\n\n    // const data = [] \n    // for (var k in allDates){\n    //     for (var c in categories){\n    //         var res = props.data.filter(function (d) {\n    //             return d.date == allDates[k] &&\n    //             d.category == categories[c];\n    //         });\n\n    //         let entry = {\n    //             'date': allDates[k],\n    //             'category': categories[c],\n    //             'count': res.length,\n    //         }\n\n    //         data.push(entry);\n    //     }\n    // }\n\n    // const sumstat = d3.group(data, d => d.category); \n\n    // // console.log(sumstat);\n\n    // const dateLen = Object.keys(counts).length;\n\n    // var x = d3.scaleBand()\n    //     .domain(allDates)       \n    //     .range([0, width - padding*3]); \n\n    // svg.append(\"g\")\n    //         .attr(\"transform\", \"translate(\" + padding + ',' + (height-1.5*padding) + \") \")\n    //         .call(d3.axisBottom(x).ticks(dateLen))\n    //         .selectAll(\"text\")\n    //         .attr(\"transform\", \"translate(-10,20)rotate(-45)\")\n    //         .style(\"text-anchor\", \"middle\")\n    //         .style(\"font-size\", 10);\n\n    // var y = d3.scaleLinear()\n    //           .domain([0, d3.max(data, function(d) { return +d.count; })])\n    //           .range([ height - padding*2.5, 0 ]);\n\n    // svg.append(\"g\")\n    //     .attr(\"transform\", \"translate(\" + padding + ',' + 1*padding + \")\")\n    //     .call(d3.axisLeft(y));\n\n    // const color = d3.scaleOrdinal()\n    //     .range(['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999'])\n\n    //   // Draw the line\n    //   svg.selectAll(\".line\")\n    //       .data(sumstat)\n    //       .join(\"path\")\n    //         .attr(\"fill\", \"none\")\n    //         .attr(\"stroke\", function(d){ return color(d[0]) })\n    //         .attr(\"stroke-width\", 1.5)\n    //         .attr(\"d\", function(d){\n    //           return d3.line()\n    //             .x(function(d) { return x(d.date); })\n    //             .y(function(d) { return y(+d.count); })\n    //             (d[1])\n    //         })\n    //         .attr(\"transform\", \"translate(\" + padding + ',' + 0.5*padding + \")\");\n\n    // var legend = svg.append('g')\n    //     .attr('class', 'legend')\n    //     .attr('transform', 'translate(' + (width - padding*2) + \", \" + padding + ')' );\n\n    // var legend_colors = ['#e41a1c', '#377eb8', '#4daf4a', '#ff7f00'];\n    // // draw legends\n    // legend.selectAll('rect')\n    //       .data(categories)\n    //       .enter()\n    //       .append('rect')\n    //       .attr('x', 0)\n    //       .attr('y', function(d, i){ return i * 18; })\n    //       .attr('width', 12)\n    //       .attr('height', 12)\n    //       .attr('fill', function(d, i){\n    //           return legend_colors[i];\n    //       });\n\n    // legend.selectAll('text')\n    //       .data(categories)\n    //       .enter()\n    //       .append('text')\n    //       .text(function(d){ return d; })\n    //       .attr('x', 19)\n    //       .attr('y', function(d, i){ return i * 19;})\n    //       .attr('text-anchor', 'start')\n    //       .attr('alignment-baseline', 'hanging')\n    //       .style(\"font-size\", 7);\n\n    // svg.append(\"text\")\n    //    .attr(\"class\", \"x-label\")\n    //    .attr(\"x\", width - padding)\n    //    .attr(\"y\", height - padding)\n    //    .attr(\"text-anchor\", \"middle\")\n    //    .text(\"Date\")\n\n    // // lable of y axis\n    // svg.append(\"text\")\n    //    .attr(\"class\", \"y-label\")\n    //    .attr(\"text-anchor\", \"middle\")\n    //    .attr(\"x\", -height/2)\n    //    .attr(\"y\", padding/4)\n    //    .attr(\"dy\", \".75em\")\n    //    .attr(\"transform\", \"rotate(-90)\")\n    //    .text(\"Access Count\");\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d3-component\",\n    style: {\n      'height': '99%',\n      'width': '99%'\n    },\n    ref: d3Container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n}\n_s(PlotBarChart, \"ZIF2Y6G+4lDrENfXS4yyPmH62/0=\", false, function () {\n  return [useSVGCanvas];\n});\n_c = PlotBarChart;\nvar _c;\n$RefreshReg$(_c, \"PlotBarChart\");","map":{"version":3,"names":["React","useEffect","useRef","useMemo","useSVGCanvas","d3","jsxDEV","_jsxDEV","PlotBarChart","props","_s","d3Container","svg","height","width","tTip","chartSelection","undefined","data","categories","padding","subgroups","k","c","res","filter","d","child_feedback","category","entry","length","push","sumstat","group","console","log","Object","entries","x","scaleBand","domain","range","append","attr","call","axisBottom","ticks","selectAll","style","y","scaleLinear","max","count","axisLeft","xSubgroup","bandwidth","color","scaleOrdinal","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kokofan/Documents/project/CS522_analysis/src/barChart.js"],"sourcesContent":["import React, {useEffect, useRef, useMemo} from 'react';\nimport useSVGCanvas from './useSVGCanvas.js';\nimport * as d3 from 'd3';\n\n\nexport default function PlotBarChart(props){\n    // //this is a generic component for plotting a d3 plot\n    const d3Container = useRef(null);\n    const [svg, height, width, tTip] = useSVGCanvas(d3Container);\n    // console.log(svg, height, width, tTip);\n\n    const chartSelection = useMemo(()=>{\n        if(svg === undefined | props.data === undefined){ return }\n\n        var categories = ['Adult', 'Violence', 'Hate_Speech', 'Discrimination', 'Online_Predators'];\n        const padding = 40;\n\n        // console.log(props.data);\n\n        const subgroups = ['Agree', 'Disagree'];\n\n        const data = [] \n        for (var k in subgroups){\n            for (var c in categories){\n                var res = props.data.filter(function (d) {\n                    return d.child_feedback == subgroups[k] &&\n                    d.category == categories[c];\n                });\n\n                // console.log(res);\n\n                let entry = {\n                    'feedback': subgroups[k],\n                    'category': categories[c],\n                    'count': res.length,\n                }\n                data.push(entry);\n            }\n        }\n\n        const sumstat = d3.group(data, d => d.category); \n\n        console.log(Object.entries(sumstat));\n\n\n        // for (var d in data) {\n        //     console.log(d);\n        // }\n\n        \n\n        // const groups = d3.group(data, d => d.category);\n\n        // for (var g in groups) {\n        //     console.log(g);\n        // }\n\n        \n\n\n        var x = d3.scaleBand()\n            .domain(categories)       \n            .range([0, width - padding*3]); \n\n        svg.append(\"g\")\n                .attr(\"transform\", \"translate(\" + padding + ',' + (height-1.5*padding) + \") \")\n                .call(d3.axisBottom(x).ticks(categories.length))\n                .selectAll(\"text\")\n                .attr(\"transform\", \"translate(-10,20)rotate(-45)\")\n                .style(\"text-anchor\", \"middle\")\n                .style(\"font-size\", 10); \n\n\n        var y = d3.scaleLinear()\n                  .domain([0, d3.max(data, function(d) { return +d.count; })])\n                  .range([ height - padding*2.5, 0 ]);\n  \n        svg.append(\"g\")\n            .attr(\"transform\", \"translate(\" + padding + ',' + 1*padding + \")\")\n            .call(d3.axisLeft(y));\n\n\n        const xSubgroup = d3.scaleBand()\n            .domain(subgroups)\n            .range([0, x.bandwidth()])\n            .padding([0.05])\n\n        const color = d3.scaleOrdinal()\n            .domain(subgroups)\n            .range(['#e41a1c','#377eb8'])\n\n        //   // Show the bars\n        // svg.append(\"g\")\n        //     .selectAll(\"g\")\n        //     // Enter in data = loop group per group\n        //     .data(data)\n        //     .join(\"g\")\n        //       .attr(\"transform\", d => `translate(${x(d.category)}, 0)`)\n        //     .selectAll(\"rect\")\n        //     .data(function(d) { \n        //         var temp = feedbacks.map(function(key) {\n        //             // console.log('key', key); \n        //             return {key: key, value: d[key]}; \n        //         })\n        //         // console.log(d);\n        //         return temp; \n        //     })\n        //     .join(\"rect\")\n        //       .attr(\"x\", d => xSubgroup(d.category))\n        //       .attr(\"y\", d => y(d.count))\n        //       .attr(\"width\", xSubgroup.bandwidth())\n        //       .attr(\"height\", d => height - y(d.count))\n        //       .attr(\"fill\", d => color(d.category));\n\n\n        // const dates =  props.data.map(d => d.date);\n        // const padding = 40;\n\n        // const counts = {};\n        // for (const d of dates) {\n        //   counts[d] = counts[d] ? counts[d] + 1 : 1;\n        // }\n\n        // const allDates = Object.keys(counts);\n\n        // const data = [] \n        // for (var k in allDates){\n        //     for (var c in categories){\n        //         var res = props.data.filter(function (d) {\n        //             return d.date == allDates[k] &&\n        //             d.category == categories[c];\n        //         });\n\n        //         let entry = {\n        //             'date': allDates[k],\n        //             'category': categories[c],\n        //             'count': res.length,\n        //         }\n\n        //         data.push(entry);\n        //     }\n        // }\n\n        // const sumstat = d3.group(data, d => d.category); \n\n        // // console.log(sumstat);\n\n        // const dateLen = Object.keys(counts).length;\n\n        // var x = d3.scaleBand()\n        //     .domain(allDates)       \n        //     .range([0, width - padding*3]); \n\n        // svg.append(\"g\")\n        //         .attr(\"transform\", \"translate(\" + padding + ',' + (height-1.5*padding) + \") \")\n        //         .call(d3.axisBottom(x).ticks(dateLen))\n        //         .selectAll(\"text\")\n        //         .attr(\"transform\", \"translate(-10,20)rotate(-45)\")\n        //         .style(\"text-anchor\", \"middle\")\n        //         .style(\"font-size\", 10);\n\n        // var y = d3.scaleLinear()\n        //           .domain([0, d3.max(data, function(d) { return +d.count; })])\n        //           .range([ height - padding*2.5, 0 ]);\n  \n        // svg.append(\"g\")\n        //     .attr(\"transform\", \"translate(\" + padding + ',' + 1*padding + \")\")\n        //     .call(d3.axisLeft(y));\n\n        // const color = d3.scaleOrdinal()\n        //     .range(['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999'])\n\n\n        //   // Draw the line\n        //   svg.selectAll(\".line\")\n        //       .data(sumstat)\n        //       .join(\"path\")\n        //         .attr(\"fill\", \"none\")\n        //         .attr(\"stroke\", function(d){ return color(d[0]) })\n        //         .attr(\"stroke-width\", 1.5)\n        //         .attr(\"d\", function(d){\n        //           return d3.line()\n        //             .x(function(d) { return x(d.date); })\n        //             .y(function(d) { return y(+d.count); })\n        //             (d[1])\n        //         })\n        //         .attr(\"transform\", \"translate(\" + padding + ',' + 0.5*padding + \")\");\n\n\n        // var legend = svg.append('g')\n        //     .attr('class', 'legend')\n        //     .attr('transform', 'translate(' + (width - padding*2) + \", \" + padding + ')' );\n\n        // var legend_colors = ['#e41a1c', '#377eb8', '#4daf4a', '#ff7f00'];\n        // // draw legends\n        // legend.selectAll('rect')\n        //       .data(categories)\n        //       .enter()\n        //       .append('rect')\n        //       .attr('x', 0)\n        //       .attr('y', function(d, i){ return i * 18; })\n        //       .attr('width', 12)\n        //       .attr('height', 12)\n        //       .attr('fill', function(d, i){\n        //           return legend_colors[i];\n        //       });\n\n        // legend.selectAll('text')\n        //       .data(categories)\n        //       .enter()\n        //       .append('text')\n        //       .text(function(d){ return d; })\n        //       .attr('x', 19)\n        //       .attr('y', function(d, i){ return i * 19;})\n        //       .attr('text-anchor', 'start')\n        //       .attr('alignment-baseline', 'hanging')\n        //       .style(\"font-size\", 7);\n\n        // svg.append(\"text\")\n        //    .attr(\"class\", \"x-label\")\n        //    .attr(\"x\", width - padding)\n        //    .attr(\"y\", height - padding)\n        //    .attr(\"text-anchor\", \"middle\")\n        //    .text(\"Date\")\n\n        // // lable of y axis\n        // svg.append(\"text\")\n        //    .attr(\"class\", \"y-label\")\n        //    .attr(\"text-anchor\", \"middle\")\n        //    .attr(\"x\", -height/2)\n        //    .attr(\"y\", padding/4)\n        //    .attr(\"dy\", \".75em\")\n        //    .attr(\"transform\", \"rotate(-90)\")\n        //    .text(\"Access Count\");\n\n\n    });\n\n    return (\n        <div\n            className={\"d3-component\"}\n            style={{'height':'99%','width':'99%'}}\n            ref={d3Container}\n        ></div>\n    );\n}\n\n\n"],"mappings":"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B,SAAS,CAAC,CAAC,CAAC,CAAC,CACzBnC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;IAEpB,MAAMoC,KAAK,GAAGnD,EAAE,CAACoD,YAAY,CAAC,CAAC,CAC1BjB,MAAM,CAACnB,SAAS,CAAC,CACjBoB,KAAK,CAAC,CAAC,SAAS,EAAC,SAAS,CAAC,CAAC;;IAEjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;;IAEA;;IAEA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAGJ,CAAC,CAAC;;EAEF,oBACIlC,OAAA;IACImD,SAAS,EAAE,cAAe;IAC1BV,KAAK,EAAE;MAAC,QAAQ,EAAC,KAAK;MAAC,OAAO,EAAC;IAAK,CAAE;IACtCW,GAAG,EAAEhD;EAAY;IAAAiD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEf;AAACrD,EAAA,CAhPuBF,YAAY;EAAA,QAGGJ,YAAY;AAAA;AAAA4D,EAAA,GAH3BxD,YAAY;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}