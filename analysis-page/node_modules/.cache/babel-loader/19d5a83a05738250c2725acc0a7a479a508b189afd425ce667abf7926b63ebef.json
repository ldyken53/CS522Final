{"ast":null,"code":"var _jsxFileName = \"/Users/kokofan/Documents/project/CS529HW1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport './App.css';\nimport Whitehat from './Whitehat';\nimport WhiteHatStats from './WhiteHatStats';\nimport Blackhat from './Blackhat';\nimport BlackHatStats from './BlackHatStats';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //state deciding if we are looking at the blackhat or whitehat visualization\n  const [viewToggle, setViewToggle] = useState('blackhat');\n\n  //state for the data, since it loads asynchronously\n  const [map, setMap] = useState();\n  const [gunData, setGunData] = useState();\n  const [cityDate, setCityData] = useState();\n\n  //we put some states (brushing, zooming)\n  //at the top level and pass setZoomedState etc to the map\n  //so we can do brushing accross multiple components\n  const [zoomedState, setZoomedState] = useState();\n  const [selectedStuff, setSelectedStuff] = useState();\n  const [brushedState, setBrushedState] = useState();\n  // const [brushedRect,setBrushedRect] = useState();\n\n  //filter for the linked view in whitehat stats\n  const [sortKey, setSortKey] = useState('age');\n\n  //load map contours\n  //react looks into the '/public' folder by default\n  async function fetchMap() {\n    fetch('us-states.geojson').then(paths => {\n      paths.json().then(data => {\n        setMap(data);\n      });\n    });\n  }\n\n  //fetch gun data and attach a timestamp to make sorting dates easier for filters\n  async function fetchGunData() {\n    fetch('processed_gundeaths_data.json').then(d => {\n      d.json().then(gd => {\n        console.log('gundata', gd);\n        setGunData(gd);\n      });\n    });\n  }\n  async function fetchGunData() {\n    fetch('us-cities-demographics.json').then(d => {\n      d.json().then(cd => {\n        console.log('citydata', cd);\n        setCityData(gd);\n      });\n    });\n  }\n\n  //fetch data, called only once\n  useEffect(() => {\n    fetchMap();\n    fetchGunData();\n  }, []);\n\n  //called to draw the whitehat visualization\n  function makeWhiteHat() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          'width': '100%',\n          'height': '50%',\n          'display': 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            'height': '100%',\n            'width': 'calc(100% - 15em)',\n            'display': 'inline-block'\n          },\n          children: /*#__PURE__*/_jsxDEV(Whitehat, {\n            map: map,\n            data: gunData,\n            ToolTip: ToolTip,\n            zoomedState: zoomedState,\n            setSelectedStuff: setSelectedStuff,\n            setZoomedState: setZoomedState,\n            brushedState: brushedState,\n            setBrushedState: setBrushedState\n            // brushedRect={brushedRect}\n            // setBrushedRect={setBrushedRect}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'shadow',\n          style: {\n            'height': '100%',\n            'width': '14em',\n            'display': 'inline-block',\n            'verticalAlign': 'text-bottom'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: 'Instructions'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: 'Click on each state to zoom and unzoom'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          'height': '49%',\n          'width': '99%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'title',\n          style: {\n            'height': '2em',\n            'width': '100%',\n            'fontWeight': 'bold',\n            'fontFamily': 'Georgia'\n          },\n          children: 'Gun Deaths'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            'height': 'calc(100% - 2em)',\n            'width': '50%',\n            'maxWidth': '60em',\n            'marginLeft': '25%'\n          },\n          children: /*#__PURE__*/_jsxDEV(WhiteHatStats, {\n            data: gunData,\n            ToolTip: ToolTip,\n            brushedState: brushedState,\n            setBrushedState: setBrushedState\n            // brushedRect={brushedRect}\n            // setBrushedRect={setBrushedRect}\n            ,\n            zoomedState: zoomedState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  //function for a simpler chloropleth map\n  function makeBlackHat() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          'width': '100%',\n          'height': '50%',\n          'display': 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            'height': '100%',\n            'width': 'calc(100% - 15em)',\n            'display': 'inline-block'\n          },\n          children: /*#__PURE__*/_jsxDEV(Blackhat, {\n            map: map,\n            data: gunData,\n            ToolTip: ToolTip,\n            zoomedState: zoomedState,\n            setSelectedStuff: setSelectedStuff,\n            setZoomedState: setZoomedState,\n            brushedState: brushedState,\n            setBrushedState: setBrushedState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'shadow',\n          style: {\n            'height': '100%',\n            'width': '14em',\n            'display': 'inline-block',\n            'verticalAlign': 'text-bottom'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: 'Instructions'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: 'Click on each state to zoom and unzoom'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          'height': '49%',\n          'width': '99%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'title',\n          style: {\n            'height': '2em',\n            'width': '100%',\n            'fontWeight': 'bold',\n            'fontFamily': 'Georgia'\n          },\n          children: 'Gun Deaths'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            'height': 'calc(100% - 2em)',\n            'width': '50%',\n            'maxWidth': '60em',\n            'marginLeft': '25%'\n          },\n          children: /*#__PURE__*/_jsxDEV(BlackHatStats, {\n            data: gunData,\n            ToolTip: ToolTip\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  //toggle which visualization we're looking at based on the \"viewToggle\" state\n  const hat = () => {\n    if (viewToggle === 'whitehat') {\n      return makeWhiteHat();\n    } else {\n      return makeBlackHat();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'header',\n      style: {\n        'height': '2em',\n        'width': '100vw'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setViewToggle('whitehat'),\n        className: viewToggle === 'whitehat' ? 'inactiveButton' : 'activeButton',\n        children: \"White Hat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setViewToggle('blackhat'),\n        className: viewToggle === 'blackhat' ? 'inactiveButton' : 'activeButton',\n        children: \"Black Hat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'body',\n      style: {\n        'height': 'calc(100vh - 2.5em)',\n        'width': '100vw'\n      },\n      children: hat()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sLkSX9uRiUk0ccrSM14ODzfW3eg=\");\n_c = App;\nclass ToolTip {\n  static moveTTip(tTip, tipX, tipY) {\n    var tipBBox = tTip.node().getBoundingClientRect();\n    while (tipBBox.width + tipX > window.innerWidth) {\n      tipX = tipX - 10;\n    }\n    while (tipBBox.height + tipY > window.innerHeight) {\n      tipY = tipY - 10;\n    }\n    tTip.style('left', tipX + 'px').style('top', tipY + 'px').style('visibility', 'visible').style('z-index', 1000);\n  }\n  static moveTTipEvent(tTip, event) {\n    var tipX = event.pageX + 30;\n    var tipY = event.pageY - 20;\n    this.moveTTip(tTip, tipX, tipY);\n  }\n  static hideTTip(tTip) {\n    tTip.style('visibility', 'hidden');\n  }\n  static addTTipCanvas(tTip, className, width, height) {\n    tTip.selectAll('svg').selectAll('.' + className).remove();\n    let canvas = tTip.append('svg').attr('class', className).attr('height', height).attr('width', width).style('background', 'white');\n    return canvas;\n  }\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Whitehat","WhiteHatStats","Blackhat","BlackHatStats","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","viewToggle","setViewToggle","map","setMap","gunData","setGunData","cityDate","setCityData","zoomedState","setZoomedState","selectedStuff","setSelectedStuff","brushedState","setBrushedState","sortKey","setSortKey","fetchMap","fetch","then","paths","json","data","fetchGunData","d","gd","console","log","cd","makeWhiteHat","children","style","ToolTip","fileName","_jsxFileName","lineNumber","columnNumber","className","makeBlackHat","hat","onClick","_c","moveTTip","tTip","tipX","tipY","tipBBox","node","getBoundingClientRect","width","window","innerWidth","height","innerHeight","moveTTipEvent","event","pageX","pageY","hideTTip","addTTipCanvas","selectAll","remove","canvas","append","attr","$RefreshReg$"],"sources":["/Users/kokofan/Documents/project/CS529HW1/src/App.js"],"sourcesContent":["import React, {useState,useEffect, useMemo} from 'react';\nimport './App.css';\nimport Whitehat from './Whitehat';\nimport WhiteHatStats from './WhiteHatStats'\nimport Blackhat from './Blackhat';\nimport BlackHatStats from './BlackHatStats';\nimport * as d3 from 'd3';\n\n\nfunction App() {\n\n  //state deciding if we are looking at the blackhat or whitehat visualization\n  const [viewToggle, setViewToggle] = useState('blackhat');\n\n  //state for the data, since it loads asynchronously\n  const [map, setMap] = useState();\n  const [gunData, setGunData] = useState();\n  const [cityDate, setCityData] = useState();\n\n  //we put some states (brushing, zooming)\n  //at the top level and pass setZoomedState etc to the map\n  //so we can do brushing accross multiple components\n  const [zoomedState,setZoomedState] = useState();\n  const [selectedStuff,setSelectedStuff] = useState();\n  const [brushedState,setBrushedState] = useState();\n  // const [brushedRect,setBrushedRect] = useState();\n\n  //filter for the linked view in whitehat stats\n  const [sortKey,setSortKey] = useState('age');\n\n  //load map contours\n  //react looks into the '/public' folder by default\n  async function fetchMap(){\n    fetch('us-states.geojson').then(paths=>{\n      paths.json().then(data=>{\n        setMap(data);\n      })\n    })\n  }\n\n  //fetch gun data and attach a timestamp to make sorting dates easier for filters\n  async function fetchGunData(){\n    fetch('processed_gundeaths_data.json').then(d => {\n      d.json().then(gd=>{\n        console.log('gundata',gd)\n        setGunData(gd);\n      })\n    })\n  }\n\n  async function fetchGunData(){\n    fetch('us-cities-demographics.json').then(d => {\n      d.json().then(cd=>{\n        console.log('citydata',cd)\n        setCityData(gd);\n      })\n    })\n  }\n\n\n  //fetch data, called only once\n  useEffect(()=>{\n    fetchMap();\n    fetchGunData()\n  },[])\n\n \n  //called to draw the whitehat visualization\n  function makeWhiteHat(){\n    \n        return (\n          <>\n            <div style={{'width':'100%','height':'50%','display':'inline-block'}}>\n              <div \n                style={{'height': '100%','width':'calc(100% - 15em)','display':'inline-block'}}\n              >\n                  <Whitehat\n                    map={map}\n                    data={gunData}\n                    ToolTip={ToolTip}\n                    zoomedState={zoomedState}\n                    setSelectedStuff={setSelectedStuff}\n                    setZoomedState={setZoomedState}\n                    brushedState={brushedState}\n                    setBrushedState={setBrushedState}\n                    // brushedRect={brushedRect}\n                    // setBrushedRect={setBrushedRect}\n                  />\n              </div>\n              <div \n                className={'shadow'}\n                style={{'height': '100%','width':'14em','display':'inline-block','verticalAlign':'text-bottom'}}\n              >\n                <h1>{'Instructions'}</h1>\n                <p>{'Click on each state to zoom and unzoom'}</p>\n              </div>\n            </div>\n            <div style={{'height': '49%','width':'99%'}}>\n              <div className={'title'} \n                style={{'height':'2em','width':'100%','fontWeight':'bold','fontFamily':'Georgia'}}\n              >\n                {'Gun Deaths'}\n              </div>\n              <div style={{'height': 'calc(100% - 2em)','width': '50%','maxWidth': '60em','marginLeft':'25%'}}>\n                <WhiteHatStats\n                  data={gunData}\n                  ToolTip={ToolTip}\n                  brushedState={brushedState}\n                  setBrushedState={setBrushedState}\n                  // brushedRect={brushedRect}\n                  // setBrushedRect={setBrushedRect}\n                  zoomedState={zoomedState}\n                />     \n              </div>   \n            </div>\n          </>\n        )\n      }\n\n  //function for a simpler chloropleth map\n  function makeBlackHat(){\n\n    return (\n      <>\n        <div style={{'width':'100%','height':'50%','display':'inline-block'}}>\n          <div \n            style={{'height': '100%','width':'calc(100% - 15em)','display':'inline-block'}}\n          >\n              <Blackhat\n                map={map}\n                data={gunData}\n                ToolTip={ToolTip}\n                zoomedState={zoomedState}\n                setSelectedStuff={setSelectedStuff}\n                setZoomedState={setZoomedState}\n                brushedState={brushedState}\n                setBrushedState={setBrushedState}\n              />\n          </div>\n          <div \n            className={'shadow'}\n            style={{'height': '100%','width':'14em','display':'inline-block','verticalAlign':'text-bottom'}}\n          >\n            <h1>{'Instructions'}</h1>\n            <p>{'Click on each state to zoom and unzoom'}</p>\n          </div>\n        </div>\n        <div style={{'height': '49%','width':'99%'}}>\n          <div className={'title'} \n            style={{'height':'2em','width':'100%','fontWeight':'bold','fontFamily':'Georgia'}}\n          >\n            {'Gun Deaths'}\n          </div>\n          <div style={{'height': 'calc(100% - 2em)','width': '50%','maxWidth': '60em','marginLeft':'25%'}}>\n            <BlackHatStats\n              data={gunData}\n              ToolTip={ToolTip}\n            />     \n          </div>   \n        </div>\n      </>\n    )\n  }\n\n  //toggle which visualization we're looking at based on the \"viewToggle\" state\n  const hat = ()=>{\n    if(viewToggle === 'whitehat'){\n      return makeWhiteHat();\n    }\n    else{\n      return makeBlackHat();\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className={'header'}\n        style={{'height':'2em','width':'100vw'}}\n      >\n        <button \n         onClick={() => setViewToggle('whitehat')}\n         className={viewToggle === 'whitehat'? 'inactiveButton':'activeButton'}\n         >{\"White Hat\"}\n        </button>\n        <button \n         onClick={() => setViewToggle('blackhat')}\n         className={viewToggle === 'blackhat'? 'inactiveButton':'activeButton'}\n         >{\"Black Hat\"}\n        </button>\n      </div>\n      <div className={'body'} \n        style={{'height':'calc(100vh - 2.5em)','width':'100vw'}}\n        >\n        {hat()}\n      </div>\n    </div>\n  );\n}\n\n\nclass ToolTip {\n  static moveTTip(tTip, tipX, tipY){\n    var tipBBox = tTip.node().getBoundingClientRect();\n    while(tipBBox.width + tipX > window.innerWidth){\n        tipX = tipX - 10 ;\n    }\n    while(tipBBox.height + tipY > window.innerHeight){\n        tipY = tipY - 10 ;\n    }\n    tTip.style('left', tipX + 'px')\n        .style('top', tipY + 'px')\n        .style('visibility', 'visible')\n        .style('z-index', 1000);\n  }\n\n  static moveTTipEvent(tTip, event){\n      var tipX = event.pageX + 30;\n      var tipY = event.pageY -20;\n      this.moveTTip(tTip,tipX,tipY);\n  }\n\n\n  static hideTTip(tTip){\n      tTip.style('visibility', 'hidden')\n  }\n\n  static addTTipCanvas(tTip, className, width, height){\n      tTip.selectAll('svg').selectAll('.'+className).remove();\n      let canvas = tTip.append('svg').attr('class',className)\n          .attr('height',height).attr('width',width)\n          .style('background','white');\n      return canvas\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}