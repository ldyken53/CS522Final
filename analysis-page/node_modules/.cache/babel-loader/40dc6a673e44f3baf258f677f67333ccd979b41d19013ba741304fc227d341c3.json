{"ast":null,"code":"var _jsxFileName = \"/Users/kokofan/Documents/project/CS529HW1/src/WhiteHatStats.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useMemo } from 'react';\nimport useSVGCanvas from './useSVGCanvas.js';\nimport * as d3 from 'd3';\n\n//change the code below to modify the bottom plot view\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WhiteHatStats(props) {\n  _s();\n  //this is a generic component for plotting a d3 plot\n  const d3Container = useRef(null);\n  //this automatically constructs an svg canvas the size of the parent container (height and width)\n  //tTip automatically attaches a div of the class 'tooltip' if it doesn't already exist\n  //this will automatically resize when the window changes so passing svg to a useeffect will re-trigger\n  const [svg, height, width, tTip] = useSVGCanvas(d3Container);\n  const margin = 50;\n  const radius = 10;\n\n  //TODO: modify or replace the code below to draw a more truthful or insightful representation of the dataset. This other representation could be a histogram, a stacked bar chart, etc.\n  //this loop updates when the props.data changes or the window resizes\n  //we can edit it to also use props.brushedState if you want to use linking\n  useEffect(() => {\n    //wait until the data loads\n    if (svg === undefined | props.data === undefined) {\n      return;\n    }\n\n    //aggregate gun deaths by state\n    const data = props.data.states;\n    console.log('data in blow', data);\n\n    //get data for each state\n    const plotData = [];\n    for (let state of data) {\n      const dd = drawingDifficulty[state.abreviation];\n      let entry = {\n        'count': state.count,\n        'name': state.state,\n        'easeOfDrawing': dd === undefined ? 5 : dd,\n        'genderRatio': state.male_count / state.count\n      };\n      plotData.push(entry);\n    }\n\n    //get transforms for each value into x and y coordinates\n    let xScale = d3.scaleLinear().domain(d3.extent(plotData, d => d.easeOfDrawing)).range([margin + radius, width - margin - radius]);\n    let yScale = d3.scaleLinear().domain(d3.extent(plotData, d => d.count)).range([height - margin - radius, margin + radius]);\n\n    //draw a line showing the mean values across the curve\n    //this probably isn't actually regression\n    const regressionLine = [];\n    for (let i = 0; i <= 10; i += 1) {\n      let pvals = plotData.filter(d => Math.abs(d.easeOfDrawing - i) <= .5);\n      let meanY = 0;\n      if (pvals.length > 0) {\n        for (let entry of pvals) {\n          meanY += entry.count / pvals.length;\n        }\n      }\n      let point = [xScale(i), yScale(meanY)];\n      regressionLine.push(point);\n    }\n\n    //scale color by gender ratio for no reason\n    let colorScale = d3.scaleDiverging().domain([0, .5, 1]).range(['magenta', 'white', 'navy']);\n\n    //draw the circles for each state\n    svg.selectAll('.dot').remove();\n    svg.selectAll('.dot').data(plotData).enter().append('circle').attr('cy', d => yScale(d.count)).attr('cx', d => xScale(d.easeOfDrawing)).attr('fill', d => colorScale(d.genderRatio)).attr('r', 10).on('mouseover', (e, d) => {\n      let string = d.name + '</br>' + 'Gun Deaths: ' + d.count + '</br>' + 'Difficulty Drawing: ' + d.easeOfDrawing;\n      props.ToolTip.moveTTipEvent(tTip, e);\n      tTip.html(string);\n    }).on('mousemove', e => {\n      props.ToolTip.moveTTipEvent(tTip, e);\n    }).on('mouseout', (e, d) => {\n      props.ToolTip.hideTTip(tTip);\n    });\n\n    //draw the line\n    svg.selectAll('.regressionLine').remove();\n    svg.append('path').attr('class', 'regressionLine').attr('d', d3.line().curve(d3.curveBasis)(regressionLine)).attr('stroke-width', 5).attr('stroke', 'black').attr('fill', 'none');\n\n    //change the title\n    const labelSize = margin / 2;\n    svg.selectAll('text').remove();\n    svg.append('text').attr('x', width / 2).attr('y', labelSize).attr('text-anchor', 'middle').attr('font-size', labelSize).attr('font-weight', 'bold').text('How Hard it Is To Draw Each State Vs Gun Deaths');\n\n    //change the disclaimer here\n    svg.append('text').attr('x', width - 20).attr('y', height / 3).attr('text-anchor', 'end').attr('font-size', 10).text(\"I'm just asking questions\");\n\n    //draw basic axes using the x and y scales\n    svg.selectAll('g').remove();\n    svg.append('g').attr('transform', `translate(0,${height - margin + 1})`).call(d3.axisBottom(xScale));\n    svg.append('g').attr('transform', `translate(${margin - 2},0)`).call(d3.axisLeft(yScale));\n  }, [props.data, svg]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d3-component\",\n    style: {\n      'height': '99%',\n      'width': '99%'\n    },\n    ref: d3Container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n//END of TODO #1.\n_s(WhiteHatStats, \"WSxzHn2M6v/mpwTKCm+WLF/lrvI=\", false, function () {\n  return [useSVGCanvas];\n});\n_c = WhiteHatStats;\nconst drawingDifficulty = {\n  'IL': 9,\n  'AL': 2,\n  'AK': 1,\n  'AR': 3,\n  'CA': 9.51,\n  'CO': 0,\n  'DE': 3.1,\n  'DC': 1.3,\n  'FL': 8.9,\n  'GA': 3.9,\n  'HI': 4.5,\n  'ID': 4,\n  'IN': 4.3,\n  'IA': 4.1,\n  'KS': 1.6,\n  'KY': 7,\n  'LA': 6.5,\n  'MN': 2.1,\n  'MO': 5.5,\n  'ME': 7.44,\n  'MD': 10,\n  'MA': 6.8,\n  'MI': 9.7,\n  'MN': 5.1,\n  'MS': 3.8,\n  'MT': 1.4,\n  'NE': 1.9,\n  'NV': .5,\n  'NH': 3.7,\n  'NJ': 9.1,\n  'NM': .2,\n  'NY': 8.7,\n  'NC': 8.5,\n  'ND': 2.3,\n  'OH': 5.8,\n  'OK': 6.05,\n  'OR': 4.7,\n  'PA': 4.01,\n  'RI': 8.4,\n  'SC': 7.1,\n  'SD': .9,\n  'TN': 3.333333,\n  'TX': 8.1,\n  'UT': 2.8,\n  'VT': 2.6,\n  'VA': 8.2,\n  'WA': 9.2,\n  'WV': 7.9,\n  'WY': 0\n};\nvar _c;\n$RefreshReg$(_c, \"WhiteHatStats\");","map":{"version":3,"names":["React","useEffect","useRef","useMemo","useSVGCanvas","d3","jsxDEV","_jsxDEV","WhiteHatStats","props","_s","d3Container","svg","height","width","tTip","margin","radius","undefined","data","states","console","log","plotData","state","dd","drawingDifficulty","abreviation","entry","count","male_count","push","xScale","scaleLinear","domain","extent","d","easeOfDrawing","range","yScale","regressionLine","i","pvals","filter","Math","abs","meanY","length","point","colorScale","scaleDiverging","selectAll","remove","enter","append","attr","genderRatio","on","e","string","name","ToolTip","moveTTipEvent","html","hideTTip","line","curve","curveBasis","labelSize","text","call","axisBottom","axisLeft","className","style","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kokofan/Documents/project/CS529HW1/src/WhiteHatStats.js"],"sourcesContent":["import React, {useEffect, useRef,useMemo} from 'react';\nimport useSVGCanvas from './useSVGCanvas.js';\nimport * as d3 from 'd3';\n\n//change the code below to modify the bottom plot view\nexport default function WhiteHatStats(props){\n    //this is a generic component for plotting a d3 plot\n    const d3Container = useRef(null);\n    //this automatically constructs an svg canvas the size of the parent container (height and width)\n    //tTip automatically attaches a div of the class 'tooltip' if it doesn't already exist\n    //this will automatically resize when the window changes so passing svg to a useeffect will re-trigger\n    const [svg, height, width, tTip] = useSVGCanvas(d3Container);\n\n    const margin = 50;\n    const radius = 10;\n\n\n    //TODO: modify or replace the code below to draw a more truthful or insightful representation of the dataset. This other representation could be a histogram, a stacked bar chart, etc.\n    //this loop updates when the props.data changes or the window resizes\n    //we can edit it to also use props.brushedState if you want to use linking\n    useEffect(()=>{\n        //wait until the data loads\n        if(svg === undefined | props.data === undefined){ return }\n\n        //aggregate gun deaths by state\n        const data = props.data.states;\n        console.log('data in blow', data);\n        \n        //get data for each state\n        const plotData = [];\n        for(let state of data){\n            const dd = drawingDifficulty[state.abreviation];\n            let entry = {\n                'count': state.count,\n                'name': state.state,\n                'easeOfDrawing': dd === undefined? 5: dd,\n                'genderRatio': state.male_count/state.count,\n            }\n            plotData.push(entry)\n        }\n\n        //get transforms for each value into x and y coordinates\n        let xScale = d3.scaleLinear()\n            .domain(d3.extent(plotData,d=>d.easeOfDrawing))\n            .range([margin+radius,width-margin-radius]);\n        let yScale = d3.scaleLinear()\n            .domain(d3.extent(plotData,d=>d.count))\n            .range([height-margin-radius,margin+radius]);\n\n\n        //draw a line showing the mean values across the curve\n        //this probably isn't actually regression\n        const regressionLine = [];\n        for(let i = 0; i <= 10; i+= 1){\n            let pvals = plotData.filter(d => Math.abs(d.easeOfDrawing - i) <= .5);\n            let meanY = 0;\n            if(pvals.length > 0){\n                for(let entry of pvals){\n                    meanY += entry.count/pvals.length\n                }\n            }\n            let point = [xScale(i),yScale(meanY)]\n            regressionLine.push(point)\n        }\n        \n        //scale color by gender ratio for no reason\n        let colorScale = d3.scaleDiverging()\n            .domain([0,.5,1])\n            .range(['magenta','white','navy']);\n\n        //draw the circles for each state\n        svg.selectAll('.dot').remove();\n        svg.selectAll('.dot').data(plotData)\n            .enter().append('circle')\n            .attr('cy',d=> yScale(d.count))\n            .attr('cx',d=>xScale(d.easeOfDrawing))\n            .attr('fill',d=> colorScale(d.genderRatio))\n            .attr('r',10)\n            .on('mouseover',(e,d)=>{\n                let string = d.name + '</br>'\n                    + 'Gun Deaths: ' + d.count + '</br>'\n                    + 'Difficulty Drawing: ' + d.easeOfDrawing;\n                props.ToolTip.moveTTipEvent(tTip,e)\n                tTip.html(string)\n            }).on('mousemove',(e)=>{\n                props.ToolTip.moveTTipEvent(tTip,e);\n            }).on('mouseout',(e,d)=>{\n                props.ToolTip.hideTTip(tTip);\n            });\n           \n        //draw the line\n        svg.selectAll('.regressionLine').remove();\n        svg.append('path').attr('class','regressionLine')\n            .attr('d',d3.line().curve(d3.curveBasis)(regressionLine))\n            .attr('stroke-width',5)\n            .attr('stroke','black')\n            .attr('fill','none');\n\n        //change the title\n        const labelSize = margin/2;\n        svg.selectAll('text').remove();\n        svg.append('text')\n            .attr('x',width/2)\n            .attr('y',labelSize)\n            .attr('text-anchor','middle')\n            .attr('font-size',labelSize)\n            .attr('font-weight','bold')\n            .text('How Hard it Is To Draw Each State Vs Gun Deaths');\n\n        //change the disclaimer here\n        svg.append('text')\n            .attr('x',width-20)\n            .attr('y',height/3)\n            .attr('text-anchor','end')\n            .attr('font-size',10)\n            .text(\"I'm just asking questions\");\n\n        //draw basic axes using the x and y scales\n        svg.selectAll('g').remove()\n        svg.append('g')\n            .attr('transform',`translate(0,${height-margin+1})`)\n            .call(d3.axisBottom(xScale))\n\n        svg.append('g')\n            .attr('transform',`translate(${margin-2},0)`)\n            .call(d3.axisLeft(yScale))\n        \n    },[props.data,svg]);\n\n    return (\n        <div\n            className={\"d3-component\"}\n            style={{'height':'99%','width':'99%'}}\n            ref={d3Container}\n        ></div>\n    );\n}\n//END of TODO #1.\n\n \nconst drawingDifficulty = {\n    'IL': 9,\n    'AL': 2,\n    'AK': 1,\n    'AR': 3,\n    'CA': 9.51,\n    'CO': 0,\n    'DE': 3.1,\n    'DC': 1.3,\n    'FL': 8.9,\n    'GA': 3.9,\n    'HI': 4.5,\n    'ID': 4,\n    'IN': 4.3,\n    'IA': 4.1,\n    'KS': 1.6,\n    'KY': 7,\n    'LA': 6.5,\n    'MN': 2.1,\n    'MO': 5.5,\n    'ME': 7.44,\n    'MD': 10,\n    'MA': 6.8,\n    'MI': 9.7,\n    'MN': 5.1,\n    'MS': 3.8,\n    'MT': 1.4,\n    'NE': 1.9,\n    'NV': .5,\n    'NH': 3.7,\n    'NJ': 9.1,\n    'NM': .2,\n    'NY': 8.7,\n    'NC': 8.5,\n    'ND': 2.3,\n    'OH': 5.8,\n    'OK': 6.05,\n    'OR': 4.7,\n    'PA': 4.01,\n    'RI': 8.4,\n    'SC': 7.1,\n    'SD': .9,\n    'TN': 3.333333,\n    'TX': 8.1,\n    'UT': 2.8,\n    'VT': 2.6,\n    'VA': 8.2,\n    'WA': 9.2,\n    'WV': 7.9,\n    'WY': 0,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}