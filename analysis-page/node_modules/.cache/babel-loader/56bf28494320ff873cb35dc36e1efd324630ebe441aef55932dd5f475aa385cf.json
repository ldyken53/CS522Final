{"ast":null,"code":"import React, { useState, useEffect, useMemo } from 'react';\nimport './App.css';\nimport Whitehat from './Whitehat';\nimport WhiteHatStats from './WhiteHatStats';\nimport Blackhat from './Blackhat';\nimport BlackHatStats from './BlackHatStats';\nimport * as d3 from 'd3';\nfunction App() {\n  // //state deciding if we are looking at the blackhat or whitehat visualization\n  // const [viewToggle, setViewToggle] = useState('blackhat');\n\n  // //state for the data, since it loads asynchronously\n  // const [map, setMap] = useState();\n  // const [gunData, setGunData] = useState();\n  // const [cityData, setCityData] = useState();\n\n  // //we put some states (brushing, zooming)\n  // //at the top level and pass setZoomedState etc to the map\n  // //so we can do brushing accross multiple components\n  // const [zoomedState,setZoomedState] = useState();\n  // const [selectedStuff,setSelectedStuff] = useState();\n  // const [brushedState,setBrushedState] = useState();\n  // // const [brushedRect,setBrushedRect] = useState();\n\n  // //filter for the linked view in whitehat stats\n  // const [sortKey,setSortKey] = useState('age');\n\n  // //load map contours\n  // //react looks into the '/public' folder by default\n  // async function fetchMap(){\n  //   fetch('us-states.geojson').then(paths=>{\n  //     paths.json().then(data=>{\n  //       setMap(data);\n  //     })\n  //   })\n  // }\n\n  // //fetch gun data and attach a timestamp to make sorting dates easier for filters\n  // async function fetchGunData(){\n  //   fetch('processed_gundeaths_data.json').then(d => {\n  //     d.json().then(gd=>{\n  //       // console.log('gundata',gd)\n  //       setGunData(gd);\n  //     })\n  //   })\n  // }\n\n  // async function fetchCityData(){\n  //   fetch('us-cities-demographics.json').then(d => {\n  //     d.json().then(cd=>{\n  //       // console.log('citydata',cd)\n  //       setCityData(cd);\n  //     })\n  //   })\n  // }\n\n  // //fetch data, called only once\n  // useEffect(()=>{\n  //   fetchMap();\n  //   fetchGunData();\n  //   fetchCityData();\n  // },[])\n\n  //called to draw the whitehat visualization\n  // function makeWhiteHat(){\n\n  //       return (\n  //         <>\n\n  //         <div class=\"vertical-menu\" \n  //         style={{'width':'20%','height':'100%','display':'inline-block', 'background': 'grey'}}\n  //         >\n  //           <h1>{'Menu'}</h1>\n  //           <a href=\"#\" class=\"active\">Home</a>\n  //           <a href=\"#\">Link 1</a>\n  //           <a href=\"#\">Link 2</a>\n  //           <a href=\"#\">Link 3</a>\n  //           <a href=\"#\">Link 4</a>\n  //         </div>\n\n  //         //   <div style={{'width':'20%','height':'100%','display':'inline-block', 'background': 'grey'}}>\n  //         //   <h1>{'Menu'}</h1>\n  //         //   </div>\n  //         //   <div style={{'width':'80%','height':'100%','display':'inline-block', 'background': 'pink'}}>\n  //         //   <h1>{'Menu'}</h1>\n  //         //   </div>\n  //         // // </>\n\n  //         //   // <div style={{'width':'80%','height':'50%','display':'inline-block'}}>\n  //           //   <div \n  //           //     style={{'height': '100%','width':'calc(80% - 15em)','display':'inline-block', 'background': 'pink'}}\n  //           //   >\n  //           //       <Whitehat\n  //           //         map={map}\n  //           //         data={gunData}\n  //           //         cityPop={cityData}\n  //           //         ToolTip={ToolTip}\n  //           //         zoomedState={zoomedState}\n  //           //         setSelectedStuff={setSelectedStuff}\n  //           //         setZoomedState={setZoomedState}\n  //           //         brushedState={brushedState}\n  //           //         setBrushedState={setBrushedState}\n  //           //         // brushedRect={brushedRect}\n  //           //         // setBrushedRect={setBrushedRect}\n  //           //       />\n  //           //   </div>\n  //           //   <div \n  //           //     className={'shadow'}\n  //           //     style={{'height': '100%','width':'14em','display':'inline-block','verticalAlign':'text-bottom'}}\n  //           //   >\n  //           //     <h1>{'Instructions'}</h1>\n  //           //     <p>{'Click on each state to zoom and unzoom'}</p>\n  //           //   </div>\n  //           // </div>\n  //           // <div style={{'height': '49%','width':'99%'}}>\n  //           //   <div className={'title'} \n  //           //     style={{'height':'2em','width':'100%','fontWeight':'bold','fontFamily':'Georgia'}}\n  //           //   >\n  //           //     {'Gun Deaths'}\n  //           //   </div>\n  //           //   <div style={{'height': 'calc(100% - 2em)','width': '50%','maxWidth': '60em','marginLeft':'25%'}}>\n  //           //     <WhiteHatStats\n  //           //       data={gunData}\n  //           //       ToolTip={ToolTip}\n  //           //       brushedState={brushedState}\n  //           //       setBrushedState={setBrushedState}\n  //           //       // brushedRect={brushedRect}\n  //           //       // setBrushedRect={setBrushedRect}\n  //           //       zoomedState={zoomedState}\n  //           //     />     \n  //           //   </div>   \n  //           // </div>\n\n  //       )\n  //     }\n\n  // function makeSummary(){\n  //       <>\n  //         <div class=\"vertical-menu\" \n  //         style={{'width':'20%','height':'100%','display':'inline-block', 'background': 'grey'}}\n  //         >\n  //           <h1>{'Menu'}</h1>\n  //           <a href=\"#\" class=\"active\">Home</a>\n  //           <a href=\"#\">Link 1</a>\n  //           <a href=\"#\">Link 2</a>\n  //           <a href=\"#\">Link 3</a>\n  //           <a href=\"#\">Link 4</a>\n  //         </div>\n\n  //       </>\n  // }\n\n  // //function for a simpler chloropleth map\n  // function makeBlackHat(){\n\n  //   return (\n\n  //       <div style={{'width':'20%','height':'100%','display':'inline-block', 'background': 'grey'}}>\n  //         <h1>{'Menu'}</h1>\n  //       </div>\n  //     // <>\n  //     //   <div style={{'width':'100%','height':'50%','display':'inline-block'}}>\n  //     //     <div \n  //     //       style={{'height': '100%','width':'calc(100% - 15em)','display':'inline-block'}}\n  //     //     >\n  //     //         <Blackhat\n  //     //           map={map}\n  //     //           data={gunData}\n  //     //           ToolTip={ToolTip}\n  //     //           zoomedState={zoomedState}\n  //     //           setSelectedStuff={setSelectedStuff}\n  //     //           setZoomedState={setZoomedState}\n  //     //           brushedState={brushedState}\n  //     //           setBrushedState={setBrushedState}\n  //     //         />\n  //     //     </div>\n  //     //     <div \n  //     //       className={'shadow'}\n  //     //       style={{'height': '100%','width':'14em','display':'inline-block','verticalAlign':'text-bottom'}}\n  //     //     >\n  //     //       <h1>{'Instructions'}</h1>\n  //     //       <p>{'Click on each state to zoom and unzoom'}</p>\n  //     //     </div>\n  //     //   </div>\n  //     //   <div style={{'height': '49%','width':'99%'}}>\n  //     //     <div className={'title'} \n  //     //       style={{'height':'2em','width':'100%','fontWeight':'bold','fontFamily':'Georgia'}}\n  //     //     >\n  //     //       {'Gun Deaths'}\n  //     //     </div>\n  //     //     <div style={{'height': 'calc(100% - 2em)','width': '50%','maxWidth': '60em','marginLeft':'25%'}}>\n  //     //       <BlackHatStats\n  //     //         data={gunData}\n  //     //         ToolTip={ToolTip}\n  //     //       />     \n  //     //     </div>   \n  //     //   </div>\n  //     // </>\n  //   )\n  // }\n\n  return makeSummary();\n\n  //toggle which visualization we're looking at based on the \"viewToggle\" state\n  // const hat = ()=>{\n  //   if(viewToggle === 'whitehat'){\n  //     return makeWhiteHat();\n  //   }\n  //   else{\n  //     return makeBlackHat();\n  //   }\n  // }\n\n  // return (\n  //   <div className=\"App\">\n  //     <div className={'header'}\n  //       style={{'width':'20%','height':'100%'}}\n  //     >\n  //       <button \n  //        onClick={() => setViewToggle('whitehat')}\n  //        className={viewToggle === 'whitehat'? 'inactiveButton':'activeButton'}\n  //        >{\"White Hat\"}\n  //       </button>\n  //     </div>\n  //     <div className={'header'}\n  //       style={{'width':'20%','height':'50%'}}\n  //     >\n  //       <button \n  //        onClick={() => setViewToggle('blackhat')}\n  //        className={viewToggle === 'blackhat'? 'inactiveButton':'activeButton'}\n  //        >{\"Black Hat\"}\n  //       </button>\n  //      </div>\n  //     <div className={'body'} \n  //     style={{'height':'100%','width':'80%'}}\n  //       >\n  //       {hat()}\n  //     </div>\n  //   </div>\n  // );\n}\n_c = App;\nclass ToolTip {\n  static moveTTip(tTip, tipX, tipY) {\n    var tipBBox = tTip.node().getBoundingClientRect();\n    while (tipBBox.width + tipX > window.innerWidth) {\n      tipX = tipX - 10;\n    }\n    while (tipBBox.height + tipY > window.innerHeight) {\n      tipY = tipY - 10;\n    }\n    tTip.style('left', tipX + 'px').style('top', tipY + 'px').style('visibility', 'visible').style('z-index', 1000);\n  }\n  static moveTTipEvent(tTip, event) {\n    var tipX = event.pageX + 30;\n    var tipY = event.pageY - 20;\n    this.moveTTip(tTip, tipX, tipY);\n  }\n  static hideTTip(tTip) {\n    tTip.style('visibility', 'hidden');\n  }\n  static addTTipCanvas(tTip, className, width, height) {\n    tTip.selectAll('svg').selectAll('.' + className).remove();\n    let canvas = tTip.append('svg').attr('class', className).attr('height', height).attr('width', width).style('background', 'white');\n    return canvas;\n  }\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Whitehat","WhiteHatStats","Blackhat","BlackHatStats","d3","App","makeSummary","_c","ToolTip","moveTTip","tTip","tipX","tipY","tipBBox","node","getBoundingClientRect","width","window","innerWidth","height","innerHeight","style","moveTTipEvent","event","pageX","pageY","hideTTip","addTTipCanvas","className","selectAll","remove","canvas","append","attr","$RefreshReg$"],"sources":["/Users/kokofan/Documents/project/CS522_analysis/src/App.js"],"sourcesContent":["import React, {useState,useEffect, useMemo} from 'react';\nimport './App.css';\nimport Whitehat from './Whitehat';\nimport WhiteHatStats from './WhiteHatStats'\nimport Blackhat from './Blackhat';\nimport BlackHatStats from './BlackHatStats';\nimport * as d3 from 'd3';\n\n\nfunction App() {\n\n  // //state deciding if we are looking at the blackhat or whitehat visualization\n  // const [viewToggle, setViewToggle] = useState('blackhat');\n\n  // //state for the data, since it loads asynchronously\n  // const [map, setMap] = useState();\n  // const [gunData, setGunData] = useState();\n  // const [cityData, setCityData] = useState();\n\n  // //we put some states (brushing, zooming)\n  // //at the top level and pass setZoomedState etc to the map\n  // //so we can do brushing accross multiple components\n  // const [zoomedState,setZoomedState] = useState();\n  // const [selectedStuff,setSelectedStuff] = useState();\n  // const [brushedState,setBrushedState] = useState();\n  // // const [brushedRect,setBrushedRect] = useState();\n\n  // //filter for the linked view in whitehat stats\n  // const [sortKey,setSortKey] = useState('age');\n\n  // //load map contours\n  // //react looks into the '/public' folder by default\n  // async function fetchMap(){\n  //   fetch('us-states.geojson').then(paths=>{\n  //     paths.json().then(data=>{\n  //       setMap(data);\n  //     })\n  //   })\n  // }\n\n  // //fetch gun data and attach a timestamp to make sorting dates easier for filters\n  // async function fetchGunData(){\n  //   fetch('processed_gundeaths_data.json').then(d => {\n  //     d.json().then(gd=>{\n  //       // console.log('gundata',gd)\n  //       setGunData(gd);\n  //     })\n  //   })\n  // }\n\n  // async function fetchCityData(){\n  //   fetch('us-cities-demographics.json').then(d => {\n  //     d.json().then(cd=>{\n  //       // console.log('citydata',cd)\n  //       setCityData(cd);\n  //     })\n  //   })\n  // }\n\n\n  // //fetch data, called only once\n  // useEffect(()=>{\n  //   fetchMap();\n  //   fetchGunData();\n  //   fetchCityData();\n  // },[])\n\n \n  //called to draw the whitehat visualization\n  // function makeWhiteHat(){\n    \n  //       return (\n  //         <>\n\n  //         <div class=\"vertical-menu\" \n  //         style={{'width':'20%','height':'100%','display':'inline-block', 'background': 'grey'}}\n  //         >\n  //           <h1>{'Menu'}</h1>\n  //           <a href=\"#\" class=\"active\">Home</a>\n  //           <a href=\"#\">Link 1</a>\n  //           <a href=\"#\">Link 2</a>\n  //           <a href=\"#\">Link 3</a>\n  //           <a href=\"#\">Link 4</a>\n  //         </div>\n\n  //         //   <div style={{'width':'20%','height':'100%','display':'inline-block', 'background': 'grey'}}>\n  //         //   <h1>{'Menu'}</h1>\n  //         //   </div>\n  //         //   <div style={{'width':'80%','height':'100%','display':'inline-block', 'background': 'pink'}}>\n  //         //   <h1>{'Menu'}</h1>\n  //         //   </div>\n  //         // // </>\n\n  //         //   // <div style={{'width':'80%','height':'50%','display':'inline-block'}}>\n  //           //   <div \n  //           //     style={{'height': '100%','width':'calc(80% - 15em)','display':'inline-block', 'background': 'pink'}}\n  //           //   >\n  //           //       <Whitehat\n  //           //         map={map}\n  //           //         data={gunData}\n  //           //         cityPop={cityData}\n  //           //         ToolTip={ToolTip}\n  //           //         zoomedState={zoomedState}\n  //           //         setSelectedStuff={setSelectedStuff}\n  //           //         setZoomedState={setZoomedState}\n  //           //         brushedState={brushedState}\n  //           //         setBrushedState={setBrushedState}\n  //           //         // brushedRect={brushedRect}\n  //           //         // setBrushedRect={setBrushedRect}\n  //           //       />\n  //           //   </div>\n  //           //   <div \n  //           //     className={'shadow'}\n  //           //     style={{'height': '100%','width':'14em','display':'inline-block','verticalAlign':'text-bottom'}}\n  //           //   >\n  //           //     <h1>{'Instructions'}</h1>\n  //           //     <p>{'Click on each state to zoom and unzoom'}</p>\n  //           //   </div>\n  //           // </div>\n  //           // <div style={{'height': '49%','width':'99%'}}>\n  //           //   <div className={'title'} \n  //           //     style={{'height':'2em','width':'100%','fontWeight':'bold','fontFamily':'Georgia'}}\n  //           //   >\n  //           //     {'Gun Deaths'}\n  //           //   </div>\n  //           //   <div style={{'height': 'calc(100% - 2em)','width': '50%','maxWidth': '60em','marginLeft':'25%'}}>\n  //           //     <WhiteHatStats\n  //           //       data={gunData}\n  //           //       ToolTip={ToolTip}\n  //           //       brushedState={brushedState}\n  //           //       setBrushedState={setBrushedState}\n  //           //       // brushedRect={brushedRect}\n  //           //       // setBrushedRect={setBrushedRect}\n  //           //       zoomedState={zoomedState}\n  //           //     />     \n  //           //   </div>   \n  //           // </div>\n  \n  //       )\n  //     }\n\n\n  // function makeSummary(){\n  //       <>\n  //         <div class=\"vertical-menu\" \n  //         style={{'width':'20%','height':'100%','display':'inline-block', 'background': 'grey'}}\n  //         >\n  //           <h1>{'Menu'}</h1>\n  //           <a href=\"#\" class=\"active\">Home</a>\n  //           <a href=\"#\">Link 1</a>\n  //           <a href=\"#\">Link 2</a>\n  //           <a href=\"#\">Link 3</a>\n  //           <a href=\"#\">Link 4</a>\n  //         </div>\n\n  //       </>\n  // }\n\n  // //function for a simpler chloropleth map\n  // function makeBlackHat(){\n\n  //   return (\n\n  //       <div style={{'width':'20%','height':'100%','display':'inline-block', 'background': 'grey'}}>\n  //         <h1>{'Menu'}</h1>\n  //       </div>\n  //     // <>\n  //     //   <div style={{'width':'100%','height':'50%','display':'inline-block'}}>\n  //     //     <div \n  //     //       style={{'height': '100%','width':'calc(100% - 15em)','display':'inline-block'}}\n  //     //     >\n  //     //         <Blackhat\n  //     //           map={map}\n  //     //           data={gunData}\n  //     //           ToolTip={ToolTip}\n  //     //           zoomedState={zoomedState}\n  //     //           setSelectedStuff={setSelectedStuff}\n  //     //           setZoomedState={setZoomedState}\n  //     //           brushedState={brushedState}\n  //     //           setBrushedState={setBrushedState}\n  //     //         />\n  //     //     </div>\n  //     //     <div \n  //     //       className={'shadow'}\n  //     //       style={{'height': '100%','width':'14em','display':'inline-block','verticalAlign':'text-bottom'}}\n  //     //     >\n  //     //       <h1>{'Instructions'}</h1>\n  //     //       <p>{'Click on each state to zoom and unzoom'}</p>\n  //     //     </div>\n  //     //   </div>\n  //     //   <div style={{'height': '49%','width':'99%'}}>\n  //     //     <div className={'title'} \n  //     //       style={{'height':'2em','width':'100%','fontWeight':'bold','fontFamily':'Georgia'}}\n  //     //     >\n  //     //       {'Gun Deaths'}\n  //     //     </div>\n  //     //     <div style={{'height': 'calc(100% - 2em)','width': '50%','maxWidth': '60em','marginLeft':'25%'}}>\n  //     //       <BlackHatStats\n  //     //         data={gunData}\n  //     //         ToolTip={ToolTip}\n  //     //       />     \n  //     //     </div>   \n  //     //   </div>\n  //     // </>\n  //   )\n  // }\n\n  return (makeSummary());\n\n\n  //toggle which visualization we're looking at based on the \"viewToggle\" state\n  // const hat = ()=>{\n  //   if(viewToggle === 'whitehat'){\n  //     return makeWhiteHat();\n  //   }\n  //   else{\n  //     return makeBlackHat();\n  //   }\n  // }\n\n  // return (\n  //   <div className=\"App\">\n  //     <div className={'header'}\n  //       style={{'width':'20%','height':'100%'}}\n  //     >\n  //       <button \n  //        onClick={() => setViewToggle('whitehat')}\n  //        className={viewToggle === 'whitehat'? 'inactiveButton':'activeButton'}\n  //        >{\"White Hat\"}\n  //       </button>\n  //     </div>\n  //     <div className={'header'}\n  //       style={{'width':'20%','height':'50%'}}\n  //     >\n  //       <button \n  //        onClick={() => setViewToggle('blackhat')}\n  //        className={viewToggle === 'blackhat'? 'inactiveButton':'activeButton'}\n  //        >{\"Black Hat\"}\n  //       </button>\n  //      </div>\n  //     <div className={'body'} \n  //     style={{'height':'100%','width':'80%'}}\n  //       >\n  //       {hat()}\n  //     </div>\n  //   </div>\n  // );\n}\n\n\nclass ToolTip {\n  static moveTTip(tTip, tipX, tipY){\n    var tipBBox = tTip.node().getBoundingClientRect();\n    while(tipBBox.width + tipX > window.innerWidth){\n        tipX = tipX - 10 ;\n    }\n    while(tipBBox.height + tipY > window.innerHeight){\n        tipY = tipY - 10 ;\n    }\n    tTip.style('left', tipX + 'px')\n        .style('top', tipY + 'px')\n        .style('visibility', 'visible')\n        .style('z-index', 1000);\n  }\n\n  static moveTTipEvent(tTip, event){\n      var tipX = event.pageX + 30;\n      var tipY = event.pageY -20;\n      this.moveTTip(tTip,tipX,tipY);\n  }\n\n\n  static hideTTip(tTip){\n      tTip.style('visibility', 'hidden')\n  }\n\n  static addTTipCanvas(tTip, className, width, height){\n      tTip.selectAll('svg').selectAll('.'+className).remove();\n      let canvas = tTip.append('svg').attr('class',className)\n          .attr('height',height).attr('width',width)\n          .style('background','white');\n      return canvas\n  }\n}\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAACC,SAAS,EAAEC,OAAO,QAAO,OAAO;AACxD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,KAAKC,EAAE,MAAM,IAAI;AAGxB,SAASC,GAAGA,CAAA,EAAG;EAEbrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACC,EAAA,GA9OQF,GAAG;AAiPZ,MAAMG,OAAO,CAAC;EACZ,OAAOC,QAAQA,CAACC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAC;IAC/B,IAAIC,OAAO,GAAGH,IAAI,CAACI,IAAI,CAAC,CAAC,CAACC,qBAAqB,CAAC,CAAC;IACjD,OAAMF,OAAO,CAACG,KAAK,GAAGL,IAAI,GAAGM,MAAM,CAACC,UAAU,EAAC;MAC3CP,IAAI,GAAGA,IAAI,GAAG,EAAE;IACpB;IACA,OAAME,OAAO,CAACM,MAAM,GAAGP,IAAI,GAAGK,MAAM,CAACG,WAAW,EAAC;MAC7CR,IAAI,GAAGA,IAAI,GAAG,EAAE;IACpB;IACAF,IAAI,CAACW,KAAK,CAAC,MAAM,EAAEV,IAAI,GAAG,IAAI,CAAC,CAC1BU,KAAK,CAAC,KAAK,EAAET,IAAI,GAAG,IAAI,CAAC,CACzBS,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC,CAC9BA,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC;EAC7B;EAEA,OAAOC,aAAaA,CAACZ,IAAI,EAAEa,KAAK,EAAC;IAC7B,IAAIZ,IAAI,GAAGY,KAAK,CAACC,KAAK,GAAG,EAAE;IAC3B,IAAIZ,IAAI,GAAGW,KAAK,CAACE,KAAK,GAAE,EAAE;IAC1B,IAAI,CAAChB,QAAQ,CAACC,IAAI,EAACC,IAAI,EAACC,IAAI,CAAC;EACjC;EAGA,OAAOc,QAAQA,CAAChB,IAAI,EAAC;IACjBA,IAAI,CAACW,KAAK,CAAC,YAAY,EAAE,QAAQ,CAAC;EACtC;EAEA,OAAOM,aAAaA,CAACjB,IAAI,EAAEkB,SAAS,EAAEZ,KAAK,EAAEG,MAAM,EAAC;IAChDT,IAAI,CAACmB,SAAS,CAAC,KAAK,CAAC,CAACA,SAAS,CAAC,GAAG,GAACD,SAAS,CAAC,CAACE,MAAM,CAAC,CAAC;IACvD,IAAIC,MAAM,GAAGrB,IAAI,CAACsB,MAAM,CAAC,KAAK,CAAC,CAACC,IAAI,CAAC,OAAO,EAACL,SAAS,CAAC,CAClDK,IAAI,CAAC,QAAQ,EAACd,MAAM,CAAC,CAACc,IAAI,CAAC,OAAO,EAACjB,KAAK,CAAC,CACzCK,KAAK,CAAC,YAAY,EAAC,OAAO,CAAC;IAChC,OAAOU,MAAM;EACjB;AACF;AAEA,eAAe1B,GAAG;AAAC,IAAAE,EAAA;AAAA2B,YAAA,CAAA3B,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}